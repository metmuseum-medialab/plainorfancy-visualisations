// Generated by CoffeeScript 1.6.3
(function() {
  var barHeight, barLabelPadding, barLabelWidth, comments, commentsperday, commentsperdaydata, data, days, gridChartOffset, gridLabelHeight, maxBarWidth, valueLabelWidth, weeks;

  data = "data/plain_or_fancy_without_tweets_as_array.json";

  valueLabelWidth = 40;

  barHeight = 20;

  barLabelWidth = 100;

  barLabelPadding = 5;

  gridLabelHeight = 18;

  gridChartOffset = 3;

  maxBarWidth = 420;

  days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];

  comments = [836, 572, 966, 899, 799, 1208, 1357];

  weeks = [13, 15, 16, 15, 16, 15, 14];

  commentsperday = [64, 38, 60, 60, 50, 80, 97];

  commentsperdaydata = [
    {
      key: "Sunday",
      values: 64
    }, {
      key: "Monday",
      values: 38
    }, {
      key: "Tuesday",
      values: 60
    }, {
      key: "Wednesday",
      values: 60
    }, {
      key: "Thursday",
      values: 50
    }, {
      key: "Friday",
      values: 80
    }, {
      key: "Saturday",
      values: 97
    }
  ];

  d3.json(data, function(error, data) {
    var barLabel, barValue, barsContainer, chart, labelsContainer, x, y, yScale, yText;
    data = data.filter(function(d) {
      return d.timestamp > 0 && d.comment !== "";
    });
    data.sort(function(a, b) {
      return a.timestamp - b.timestamp;
    });
    d3.select("#comments-per-day").data(commentsperdaydata);
    barLabel = function(d) {
      return d.key;
    };
    barValue = function(d) {
      return parseInt(d.values);
    };
    yScale = d3.scale.ordinal().domain(d3.range(0, perday.length)).rangeBands([0, perday.length * barHeight]);
    y = function(d, i) {
      return yScale(i);
    };
    yText = function(d, i) {
      return y(d, i) + yScale.rangeBand() / 2;
    };
    x = d3.scale.linear().domain([0, d3.max(perday, barValue)]).range([0, maxBarWidth]);
    chart = d3.select("#comments-per-day").append("svg").attr("width", maxBarWidth + barLabelWidth + valueLabelWidth).attr("height", gridLabelHeight + gridChartOffset + perday.length * barHeight);
    barsContainer = chart.append("g").attr("transform", "translate(" + barLabelWidth + "," + (gridLabelHeight + gridChartOffset) + ")");
    barsContainer.selectAll("rect").data(perday).enter().append("rect").attr("y", y).attr("height", yScale.rangeBand()).attr("width", function(d) {
      return x(barValue(d));
    }).attr("stroke", "white").attr("fill", "steelblue");
    labelsContainer = chart.append("g").attr("transform", "translate(" + (barLabelWidth - barLabelPadding) + "," + (gridLabelHeight + gridChartOffset) + ")");
    labelsContainer.selectAll("text").data(perday).enter().append("text").attr("y", yText).attr("stroke", "none").attr("fill", "black").attr("dy", ".35em").attr("text-anchor", "end").text(barLabel);
    barsContainer.selectAll("text").data(perday).enter().append("text").attr("x", function(d) {
      return x(barValue(d));
    }).attr("y", yText).attr("dx", 3).attr("dy", ".35em").attr("text-anchor", "start").attr("fill", "black").attr("stroke", "none").text(function(d) {
      return d3.round(barValue(d), 2);
    });
    return barsContainer.append("line").attr("y1", -gridChartOffset).attr("y2", yScale.rangeExtent()[1] + gridChartOffset).style("stroke", "#000");
  });

}).call(this);
